# This workflow uses actions that are not certified by GitHub.
# They are provided by a third party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle


name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read
  checks: write

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
          
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    
    # 환경별 yml 파일 생성(1) - application.yml
    - name: make application.yml
      shell: bash
      run: |
          touch ./src/main/resources/application.yml 
          echo "${{ secrets.YML }}" > ./application.yml  # github actions에서 설정한 값을 application.yml 파일에 쓰기
      

    # gradle caching - 빌드 시간 향상
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    # Gradle wrapper 파일 실행 권한주기
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 추가
    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      if: ${{ always() }}
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
   
    # 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    # 빌드 성공 메세지 발송
    - name: Send Build Success Message
      uses: appleboy/telegram-action@master
      if: success()
      with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            Author: ${{github.actor}}
            
            Status: 😚 **Success**
            
            Commit message: ${{ github.event.commits[0].message }}
            
            [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}}) 

    # 빌드 실패 메세지 발송
    - name: Send Build Success Message
      uses: appleboy/telegram-action@master
      if: failure()
      with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            Author: ${{github.actor}}
            
            Status: 😱 **Failure**
            
            Commit message: ${{ github.event.commits[0].message }}
            
            [link](https://github.com/${{ github.repository }}/actions)
